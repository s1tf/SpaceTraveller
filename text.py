import pyxel
from bs4 import BeautifulSoup

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–∏–º–≤–æ–ª—ã –≤ "—Å—ã—Ä–æ–º" –≤–∏–¥–µ ‚Äì —ç—Ç–æ –º–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö.
# –°–∏–º–≤–æ–ª—ã —Ä–∞—Å–ø–æ–ª–∞–≥–∞—é—Ç—Å—è –Ω–∞ –∫–∞–∂–¥–æ–π 10–π-—Å—Ç—Ä–æ—á–∫–µ —Ñ–∞–π–ª–∞ "chars.py" –∏ –∑–∞–Ω–∏–º–∞—é—Ç —Å 10–π –ø–æ 20—é —Å—Ç—Ä–æ—á–∫—É
from chars import CHARS_RAW
chars_raw = CHARS_RAW.split('\n')

# –ó–¥–µ—Å—å —Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω
CHARS_LIST = '–ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–©–™–´–¨–≠–Æ–Ø–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è' \
             'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz' \
             '&_‚Ä¶,‚Äì.-+?!"‚Äú‚Äù\'{}/[]():%0123456789‚ùÑ¬´¬ª<>=‚Üë‚Üì‚Üê‚Üí|‚Äô‚ù§üö´‚úò‚úì‚ö†üí§üî∫‚ñ∂‚óÄüîçüî´‚¨õ#‚Ññüí°üçéüìÑ‚úâ@‚ö°üóëüö∂üçÑüåä'


def draw(text, x, y, color=None, show=True, x_max=None):
    """ –í—ã–≤–æ–¥–∏–º –Ω–∞ —ç–∫—Ä–∞–Ω —Ç–µ–∫—Å—Ç —Å —Ä–∞–∑–º–µ—Ç–∫–æ–π –ø–æ —Ü–≤–µ—Ç–∞–º. –ü—Ä–∏–º–µ—Ä —Ç–∞–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞:

     <p><color id={pyxel.COLOR_PURPLE}>–í–∞—Å—è: </color><color id=12>–ü—Ä–∏–≤–µ—Ç, –ü–µ—Ç—è!</color></p>
     <p><color id={pyxel.COLOR_PURPLE}>–Ø –∫—É–ø–∏–ª</color><color id=15>5</color><color id=12> —è—â–∏–∫–æ–≤ –≤–æ–¥–∫–∏.</color></p>

    :param text: —Ç–µ–∫—Å—Ç
    :param x: –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ X —Ç–µ–∫—Å—Ç–∞
    :param y: –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ Y —Ç–µ–∫—Å—Ç–∞
    :param color: [–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ] —Ü–≤–µ—Ç. –ï—Å–ª–∏ –∑–¥–µ—Å—å –Ω–µ –ø–µ—Ä–µ–¥–∞—Ç—å, —Ç–æ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å —Ü–≤–µ—Ç —á–µ—Ä–µ–∑ —Ä–∞–∑–º–µ—Ç–∫—É <color id={pyxel.COLOR_RED}>{text}</color>
    :param show: –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: True - –≤—ã–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –Ω–∞ —ç–∫—Ä–∞–Ω. False ‚Äì –Ω–µ –≤—ã–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –Ω–∞ —ç–∫—Ä–∞–Ω.
    :param x_max: –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä. –ü—Ä–∞–≤–∞—è –≥—Ä–∞–Ω–∏—Ü–∞ —Ç–µ–∫—Å—Ç–∞, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–π —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É.
    –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å—Å—è –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –ø—Ä–∞–≤–æ–π –≥—Ä–∞–Ω–∏—Ü—ã —ç–∫—Ä–∞–Ω–∞.
    :return: –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã X –∏ Y –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
    """

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    assert not (color is not None and '<color id=' in text), '–ü–µ—Ä–µ–¥–∞–Ω —Ç–µ–≥ <color> –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä "color". –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —á—Ç–æ-—Ç–æ –æ–¥–Ω–æ!'

    # –ö–∞–∫ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ä–∞ –∑–∞–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É –ø—Ä–æ–±–µ–ª–æ–º
    text = text.replace('\n', ' ')

    # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä "color", –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —Ä–∞–∑–º–µ—Ç–∫—É
    if color is not None:  # "is not None" –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, —á—Ç–æ–±—ã –∑–Ω–∞—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ "0" —É—á–∏—Ç—ã–≤–∞–ª–æ—Å—å
        text = f'<color id={color}>{text}</color>'

    # –ï—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Ç–µ–≥–∞ <color>, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º —Ü–≤–µ—Ç–æ–º
    if any(['<color id=' not in text, '</color>' not in text]):
        text = f'<color id={pyxel.COLOR_RED}>{text}</color>'

    # 1. –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –∏—Å—Ö–æ–¥–Ω—É—é –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É –•. –û–Ω–∞ –Ω–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–Ω–µ—Å—ë—Ç—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É ‚Äì
    # —á—Ç–æ–±—ã —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–æ–∫–∞ –±—ã–ª–∞ —Ä–æ–≤–Ω–æ –ø–æ–¥ —ç—Ç–æ–π.
    x_initial = x

    # 2. "–°–∫–∞—Ä–º–ª–∏–≤–∞–µ–º" —Ç–µ–∫—Å—Ç –ø–∞—Ä—Å–µ—Ä—É html —Ä–∞–∑–º–µ—Ç–∫–∏.
    soup = BeautifulSoup(text, 'html.parser')

    # 3. –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –ø–∞—Ä–∞–≥—Ä–∞—Ñ—ã (—Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø–∞—Ä–∞–≥—Ä–∞—Ñ–æ–≤: "<p></p>")
    paragraphs = soup.find_all('p')

    # 4. –ï—Å–ª–∏ –ø–∞—Ä–∞–≥—Ä–∞—Ñ—ã –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã, –∏—Ç–µ—Ä–∏—Ä—É–µ–º –ø–æ –Ω–∏–º –∏ –≤—ã–≤–æ–¥–∏–º –∫–∞–∂–¥—ã–π —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
    if paragraphs:
        for paragraph in paragraphs:

            # 4.1 –ö–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –ø–∞—Ä–∞–≥—Ä–∞—Ñ –Ω–∞—á–∏–Ω–∞–µ–º —Å –æ–¥–Ω–æ–π –∏ —Ç–æ–π –∂–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ –æ—Å–∏ X
            x = x_initial

            # 4.2 –í—ã–≤–æ–¥–∏–º –Ω–∞ —ç–∫—Ä–∞–Ω –ø–∞—Ä–∞–≥—Ä–∞—Ñ
            x, y = draw_paragraph(paragraph, x, y, show, x_max)

            # 4.3 –°–ø—É—Å–∫–∞–µ–º—Å—è –Ω–∞ —Å—Ç—Ä–æ–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–¥–µ–ª–∏—Ç—å –æ–¥–∏–Ω –ø–∞—Ä–∞–≥—Ä–∞—Ñ –æ—Ç –¥—Ä—É–≥–æ–≥–æ
            y += 10
    # 5. –ï—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Ä–∞–∑–±–∏–≤–æ–∫ –Ω–∞ –ø–∞—Ä–∞–≥—Ä–∞—Ñ—ã, –≤—ã–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –±–µ–∑ —Ä–∞–∑–±–∏–µ–Ω–∏—è –Ω–∞ –ø–∞—Ä–∞–≥—Ä–∞—Ñ—ã
    else:
        x, y = draw_paragraph(soup, x, y, show, x_max)

    # 6. –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
    return x, y


def draw_paragraph(paragraph, x, y, show=True, x_max=None):
    """ –†–∏—Å—É–µ–º –ø–∞—Ä–∞–≥—Ä–∞—Ñ
    :param paragraph: –ø–∞—Ä–∞–≥—Ä–∞—Ñ, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω
    :param x: –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ X –Ω–∞—á–∞–ª–∞ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞
    :param y: –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ Y –Ω–∞—á–∞–ª–∞ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞
    :param x_initial: –∏–∑–Ω–∞—á–∞–ª—å–Ω–∞—è –•. –ù—É–∂–Ω–∞ –¥–ª—è —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ –º—ã –ø–µ—Ä–µ–Ω–µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å
                      —Ç–æ–π –∂–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –•, —á—Ç–æ –∏ –ø—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–æ–∫–∞.
    :param show: –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: True - –≤—ã–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –Ω–∞ —ç–∫—Ä–∞–Ω. False ‚Äì –Ω–µ –≤—ã–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –Ω–∞ —ç–∫—Ä–∞–Ω.
    :param x_max: –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä. –ü—Ä–∞–≤–∞—è –≥—Ä–∞–Ω–∏—Ü–∞ —Ç–µ–∫—Å—Ç–∞, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–π —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É.
    –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å—Å—è –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –ø—Ä–∞–≤–æ–π –≥—Ä–∞–Ω–∏—Ü—ã —ç–∫—Ä–∞–Ω–∞.
    :return: –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã X –∏ Y, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –º—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏ –ø–∏—Å–∞—Ç—å —Å–ª–æ–≤–æ
    """

    # 1. –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –∏—Å—Ö–æ–¥–Ω—É—é –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É –•. –û–Ω–∞ –Ω–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–Ω–µ—Å—ë—Ç—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É ‚Äì
    # —á—Ç–æ–±—ã —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–æ–∫–∞ –±—ã–ª–∞ —Ä–æ–≤–Ω–æ –ø–æ–¥ —ç—Ç–æ–π.
    x_initial = x

    # 2. –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ —á–∞—Å—Ç–∏, –∫–∞–∂–¥–∞—è –±—É–¥–µ—Ç –∫—Ä–∞—Å–∏—Ç—å—Å—è —Å–≤–æ–∏–º —Ü–≤–µ—Ç–æ–º
    # –ò—Ç–µ—Ä–∏—Ä—É–µ–º –ø–æ —ç—Ç–∏–º —á–∞—Å—Ç—è–º –∏ –∑–∞–∫—Ä–∞—à–∏–≤–∞–µ–º –∫–∞–∂–¥—ã–π –∏–∑ –Ω–∏—Ö —Ü–≤–µ—Ç–æ–º, —É–∫–∞–∑–∞–Ω–Ω—ã–º –≤ html —Ç–µ–≥–µ
    for text_part in paragraph.find_all('color'):

        # 2.1 –ü–æ–ª—É—á–∞–µ–º —Ñ—Ä–∞–≥–º–µ–Ω—Ç —Ç–µ–∫—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø–æ–∫—Ä–∞—Å–∏—Ç—å –æ–¥–Ω–∏–º —Ü–≤–µ—Ç–æ–º
        # –¢–∞–∫–∂–µ, —Å –ø–æ–º–æ—â—å—é "strip" —É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏
        string = text_part.text.strip()

        # 2.2 –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥ —Ü–≤–µ—Ç–∞ –∏–∑ html –∞—Ç—Ä–∏–±—É—Ç–æ–≤
        col = text_part.attrs['id']

        # 2.3 –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ —Å–ª–æ–≤–∞
        # –†–∞–∑–±–∏—Ç–∏–µ –Ω–∞ —Å–ª–æ–≤–∞ –Ω–∞–º –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –µ—Å–ª–∏ —Å–ª–æ–≤–æ –Ω–µ –≤–ª–µ–∑–∞–µ—Ç –≤ —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–æ–∫—É, –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –µ–≥–æ –Ω–∞ –¥—Ä—É–≥—É—é.
        words = string.split(' ')
        for word in words:

            # –ï—Å–ª–∏ —Å–ª–æ–≤–æ ‚Äì –∑–Ω–∞–∫ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è,
            # –ò–ª–∏ –Ω–∞—á–∏–Ω–∞–µ–º –ø–∏—Å–∞—Ç—å —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ ‚Äì –Ω–µ —Å—Ç–∞–≤–∏–º –ø–µ—Ä–µ–¥ —Å–ª–æ–≤–æ–º –ø—Ä–æ–±–µ–ª.
            if word in ['.', ',', ':'] or x == x_initial:
                pass
            else:
                # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–±–µ–ª –ø–µ—Ä–µ–¥ —Å–ª–æ–≤–æ–º
                x += 3

            # –†–∏—Å—É–µ–º —Å–ª–æ–≤–æ
            x, y = draw_word(word, x, y, col, x_initial, show, x_max)

    return x, y


def draw_word(word, x, y, col, x_initial, show=True, x_max=None):
    """ –†–∏—Å—É–µ–º –æ–¥–Ω–æ —Å–ª–æ–≤–æ

    :param word: —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω
    :param x: –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ X –Ω–∞—á–∞–ª–∞ —Å–ª–æ–≤–∞
    :param y: –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ Y –Ω–∞—á–∞–ª–∞ —Å–ª–æ–≤–∞
    :param col: —Ü–≤–µ—Ç —Å–ª–æ–≤–∞
    :param x_initial: –∏–∑–Ω–∞—á–∞–ª—å–Ω–∞—è –•. –ù—É–∂–Ω–∞ –¥–ª—è —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ –º—ã –ø–µ—Ä–µ–Ω–µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å
                      —Ç–æ–π –∂–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –•, —á—Ç–æ –∏ –ø—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–æ–∫–∞.
    :param show: –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: True - –≤—ã–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –Ω–∞ —ç–∫—Ä–∞–Ω. False ‚Äì –Ω–µ –≤—ã–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –Ω–∞ —ç–∫—Ä–∞–Ω.
    :param x_max: –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä. –ü—Ä–∞–≤–∞—è –≥—Ä–∞–Ω–∏—Ü–∞ —Ç–µ–∫—Å—Ç–∞, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–π —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É.
    –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å—Å—è –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –ø—Ä–∞–≤–æ–π –≥—Ä–∞–Ω–∏—Ü—ã —ç–∫—Ä–∞–Ω–∞.
    :return: –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã X –∏ Y, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –º—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏ –ø–∏—Å–∞—Ç—å —Å–ª–æ–≤–æ
    """

    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–ª–æ–≤–æ –≤–ª–µ–∑–∞–µ—Ç –≤ —à–∏—Ä–∏–Ω—É —ç–∫—Ä–∞–Ω–∞.
    # –ï—Å–ª–∏ –Ω–µ –≤–ª–µ–∑–∞–µ—Ç ‚Äì –ø–µ—Ä–µ–Ω–æ—Å–∏–º –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É.
    if is_move_word_to_next_line(word, x, x_max):
        x = x_initial
        y += 10

    # 2 –†–∞–∑–±–∏–≤–∞–µ–º —Å–ª–æ–≤–æ –Ω–∞ —Å–∏–º–≤–æ–ª—ã –∏ –≤—ã–≤–æ–¥–∏–º –Ω–∞ —ç–∫—Ä–∞–Ω –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –ø–æ –æ—á–µ—Ä–µ–¥–∏.
    for char in list(word):
        # –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞.
        # –ù–∞ –≤—ã—Ö–æ–¥–µ –ø–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É X, —Å –∫–æ—Ç–æ—Ä–æ–π –Ω–∞–¥–æ –≤—ã–≤–æ–¥–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —Å–∏–º–≤–æ–ª
        x = draw_char(char, x, y, col, show)

    # 3. –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã X –∏ Y –∫–æ–Ω—Ü–∞ —Å–ª–æ–≤–∞
    return x, y


def draw_char(char, x, y, col, show=True):
    """ –†–∏—Å—É–µ–º –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª

    :param char: —Å–∏–º–≤–æ–ª, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω
    :param x: –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ X —Å–∏–º–≤–æ–ª–∞
    :param y: –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ Y —Å–∏–º–≤–æ–ª–∞
    :param col: —Ü–≤–µ—Ç —Å–∏–º–≤–æ–ª–∞
    :param show: True - –≤—ã–≤–æ–¥–∏–º —Å–∏–º–≤–æ–ª—ã –Ω–∞ —ç–∫—Ä–∞–Ω. False - –Ω–∏—á–µ–≥–æ –Ω–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–æ –Ω–∞ —ç–∫—Ä–∞–Ω–µ.
                 –≠—Ç–æ—Ç —Ä–µ–∂–∏–º –Ω—É–∂–µ–Ω –¥–ª—è –º–µ—Ç–æ–¥–∞ "is_move_word_to_next_line", —á—Ç–æ–±—ã –≤—ã—á–∏—Å–ª—è—Ç—å –¥–ª–∏–Ω—É —Å–ª–æ–≤–∞.
    :return: x: –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ X, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –º—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏ —Ä–∏—Å–æ–≤–∞—Ç—å —Å–∏–º–≤–æ–ª
    """

    # 1. –ï—Å–ª–∏ —Å–∏–º–≤–æ–ª ‚Äì –ø—Ä–æ–±–µ–ª, –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–≤–æ–¥–∏–º –Ω–∞ —ç–∫—Ä–∞–Ω, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–º–µ—â–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É X –≤–ø—Ä–∞–≤–æ.
    if char == ' ':
        x += 4

    # 2. –ï—Å–ª–∏ —Å–∏–º–≤–æ–ª ‚Äì –Ω–µ –ø—Ä–æ–±–µ–ª, –≤—ã–≤–æ–¥–∏–º –µ–≥–æ –Ω–∞ —ç–∫—Ä–∞–Ω.
    else:
        # 2.1 –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–∏–º–≤–æ–ª, –∫–æ—Ç–æ—Ä—ã–π –º—ã —Ö–æ—Ç–∏–º –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω, –µ—Å—Ç—å –≤ –Ω–∞—à–µ–π "–±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö".
        # assert char in CHARS_LIST, f'–°–∏–º–≤–æ–ª "{char}" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ª–æ–≤–∞—Ä–µ!'

        # –†–µ—à–∏–ª–∏ –ø–æ–∫–∞ –Ω–µ –ø–∞–¥–∞—Ç—å, –µ—Å–ª–∏ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –Ω–µ–∑–Ω–∞–∫–æ–º—ã–π —Å–∏–º–≤–æ–ª ‚Äî —Ä–∏—Å—É–µ–º –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ ‚¨õ
        if char not in CHARS_LIST:
            print(f'–°–∏–º–≤–æ–ª "{char}" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ª–æ–≤–∞—Ä–µ!')
            char = '‚¨õ'

        # 2.2 –í—ã—á–∏—Å–ª—è–µ–º, –Ω–∞ –∫–∞–∫–æ–π —Å—Ç—Ä–æ—á–∫–µ –≤ —Ñ–∞–π–ª–µ 'chars.py' –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∏—Å–∫–æ–º—ã–π —Å–∏–º–≤–æ–ª.
        # –°—á–∏—Ç–∞–µ–º, —á—Ç–æ —Å–∏–º–≤–æ–ª—ã –∑–∞–Ω–∏–º–∞–µ—Ç 10 —Å—Ç—Ä–æ–∫ –∏ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –∫–∞–∂–¥–æ–π –¥–µ—Å—è—Ç–æ–π —Å—Ç—Ä–æ—á–∫–∏.
        char_start_from_line = (CHARS_LIST.index(char) * 10) - 1

        # 2.3 –ò—Ç–µ—Ä–∏—Ä—É–µ–º –ø–æ —Å—Ç—Ä–æ–∫–∞–º —Å–∏–º–≤–æ–ª–∞ –≤–Ω—É—Ç—Ä–∏ —Ñ–∞–π–ª–∞ 'chars.py' (—Å—á–∏—Ç–∞–µ–º, —á—Ç–æ —Å–∏–º–≤–æ–ª –≤—Å–µ–≥–¥–∞ –∑–∞–Ω–∏–º–∞–µ—Ç 10 —Å—Ç—Ä–æ–∫)
        char_width = 0
        for line_nbr in range(10):
            for row_nbr, el in enumerate(chars_raw[char_start_from_line + line_nbr]):  # –∏—Ç–µ—Ä–∏—Ä—É–µ–º –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É —Å—Ç—Ä–æ–∫–∏ —Å–∏–º–≤–æ–ª–∞
                if el != ' ':
                    char_width = row_nbr if row_nbr > char_width else char_width  # –≤—ã—á–∏—Å–ª—è–µ–º —à–∏—Ä–∏–Ω—É —Å–∏–º–≤–æ–ª–∞ (—á—Ç–æ–±—ã –∑–Ω–∞—Ç—å, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Å–º–µ—â–∞—Ç—å—Å—è –≤–ø—Ä–∞–≤–æ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–∏–º–≤–æ–ª—É)

                    # –†–∏—Å—É–µ–º –ø–∏–∫—Å–µ–ª—å, –µ—Å–ª–∏ —Ñ–ª–∞–≥ "show" —Ä–∞–≤–µ–Ω True
                    if show:
                        pyxel.pset(x+row_nbr, y+line_nbr, col=int(col))

        # 2.4 –û—Ç—Å—Ç—É–ø–∞–µ–º –≤–ø—Ä–∞–≤–æ –Ω–∞ —à–∏—Ä–∏–Ω—É —Å–∏–º–≤–æ–ª–∞ + –ø—Ä–æ–±–µ–ª
        x += char_width+2

    # 3. –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã X, —á—Ç–æ–±—ã —Å–∏–º–≤–æ–ª, –∏–¥—É—â–∏–π —Å–ª–µ–¥—É—é—â–∏–º —Ä–∏—Å–æ–≤–∞—Ç—å, –Ω–∞—á–∏–Ω–∞—è —Å —ç—Ç–æ–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    return x


def is_move_word_to_next_line(word, x, x_max=None):
    """ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ–º–µ—â–∞—Ç—å —Å–ª–æ–≤–æ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É –∏–∑-–∑–∞ —Ç–æ–≥–æ, —á—Ç–æ –æ–Ω–æ –Ω–µ –ø–æ–º–µ—Å—Ç–∏–ª–æ—Å—å –≤ —Ç–µ–∫—É—â—É—é
    :param word: —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º
    :param x: –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ –•, —Å –∫–æ—Ç–æ—Ä–æ–π –Ω–∞—á–∏–Ω–∞–µ–º –ø–∏—Å–∞—Ç—å —Å–ª–æ–≤–æ
    :param x_max: –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–≤–µ–Ω —à–∏—Ä–∏–Ω–µ —ç–∫—Ä–∞–Ω–∞.
    –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å—Å—è –∫–æ–≥–¥–∞ —É–ø—Ä—ë—Ç—Å—è –≤ –ø—Ä–∞–≤—É—é –≥—Ä–∞–Ω–∏—Ü—É —ç–∫—Ä–∞–Ω–∞
    :return: True - –µ—Å–ª–∏ —Å–ª–æ–≤–æ –ø–æ–º–µ—â–∞–µ—Ç—Å—è –≤ —ç–∫—Ä–∞–Ω,
             False - –µ—Å–ª–∏ —Å–ª–æ–≤–æ –Ω–µ –ø–æ–º–µ—â–∞–µ—Ç—Å—è –≤ —ç–∫—Ä–∞–Ω """

    # 1. –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–∞–∫–∏–º–∞–ª—å–Ω—É—é —à–∏—Ä–∏–Ω—É —Ç–µ–∫—Å—Ç–∞
    # TODO: –£–±—Ä–∞–ª, –∞ —Ç–æ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ pyxel.camera(), —Ç–µ–∫—Å—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å—Å—è –Ω–∞ –¥—Ä—É–≥—É—é —Å—Ç—Ä–æ–∫—É
    # x_max = x_max if x_max else pyxel.width
    x_max = x_max if x_max else 10000

    # 2. –†–∞–∑–±–∏–≤–∞–µ–º —Å–ª–æ–≤–æ –Ω–∞ —Å–∏–º–≤–æ–ª—ã –∏ –∏–º–∏—Ç–∏—Ä—É–µ–º –≤—ã–≤–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É X.
    for char in list(word):
        # –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞.
        # –ù–∞ –≤—ã—Ö–æ–¥–µ –ø–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É X, —Å –∫–æ—Ç–æ—Ä–æ–π –Ω–∞–¥–æ –≤—ã–≤–æ–¥–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —Å–∏–º–≤–æ–ª
        x = draw_char(char, x, y=None, col=None, show=False)

    # 3. –í–æ–∑–≤—Ä–∞—â–∞–µ–º True, –µ—Å–ª–∏ —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ –• –Ω–µ –≤–ª–µ–∑–∞–µ—Ç –≤ —à–∏—Ä–∏–Ω—É —ç–∫—Ä–∞–Ω–∞
    if x >= x_max:
        return True


def text_size(string, x=0, y=0, x_max=None):
    """ –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞.
    –ù–Ω—É–∂–Ω–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–Ω–∞—Ç—å, –∫–∞–∫–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —Ä–∏—Å–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—É—é –∫–Ω–æ–ø–∫—É.
    :param string: —Ç–µ–∫—Å—Ç, —Ä–∞–∑–º–µ—Ä –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞–¥–æ –≤—ã—á–∏—Å–ª–∏—Ç—å
    :param x: [–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ] –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ –•
    :param y: [–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ] –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ Y
    :param x_max: –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–≤–µ–Ω None, –Ω–æ –≤ –∫–æ–¥–µ –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ.
    –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å—Å—è –∫–æ–≥–¥–∞ —É–ø—Ä—ë—Ç—Å—è –≤ –ø—Ä–∞–≤—É—é –≥—Ä–∞–Ω–∏—Ü—É —ç–∫—Ä–∞–Ω–∞
    :return: —Å–ø–∏—Å–æ–∫: 1) X - –∫–æ–Ω–µ—á–Ω–∞—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞,
                     2) Y- –∫–æ–Ω–µ—á–Ω–∞—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞,
                     3) W - —à–∏—Ä–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞,
                     4) H - –≤—ã—Å–æ—Ç–∞ —Ç–µ–∫—Å—Ç–∞
    """

    # 1. –î–µ–ª–∞–µ–º –∏–º–∏—Ç–∞—Ü–∏—é –≤—ã–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —ç–∫—Ä–∞–Ω, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –µ–≥–æ —Ä–∞–∑–º–µ—Ä—ã
    x1, y1 = draw(string, x, y, show=False, x_max=x_max)

    # 2. –ï—Å–ª–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã "y" –∏ "y1" —Ä–∞–≤–Ω—ã –º–µ–∂–¥—É —Å–æ–±–æ–π, —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, –º—ã –æ—Å—Ç–∞–ª–∏—Å—å –Ω–∞ —Ç–æ–π –∂–µ —Å—Ç—Ä–æ—á–∫–µ.
    # –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ –≤—ã—Å–æ—Ç–∞ —Ç–µ–∫—Å—Ç–∞ —Ä–∞–≤–Ω–∞ 10 –ø–∏–∫—Å–µ–ª—è–º - —Ç–æ –µ—Å—Ç—å, –≤—ã—Å–æ—Ç–µ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ —Ç–µ–∫—Å—Ç–∞.
    # –ï—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä "y" != "y1", –∑–Ω–∞—á–∏—Ç —Ç–µ–∫—Å—Ç –∑–∞–Ω–∏–º–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫. –¢–æ–≥–¥–∞ –≤—ã—á–∏—Å–ª—è–µ–º –µ–≥–æ –≤—ã—Å–æ—Ç—É,
    # –∫–∞–∫ —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –∫–æ–Ω–µ—á–Ω–æ–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ–π "y1" –∏ –Ω–∞—á–∞–ª—å–Ω–æ–π "y".
    h = 10 if y == y1 else y1-y

    return x1, y1, x1-x, h


if __name__ == '__main__':

    # –î–ª—è —Ü–µ–ª–µ–π —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ "pyxel"
    pyxel.init(256, 260)
    pyxel.cls(pyxel.COLOR_BLACK)
    draw(f'<color id={pyxel.COLOR_PURPLE}>{CHARS_LIST[:50]}</color>', 2, 30)
    draw(f'<color id={pyxel.COLOR_PURPLE}>{CHARS_LIST[50:100]}</color>', 2, 50)
    draw(f'<color id={pyxel.COLOR_PURPLE}>{CHARS_LIST[100:150]}</color>', 2, 70)
    draw(f'<color id={pyxel.COLOR_PURPLE}>{CHARS_LIST[150:200]}</color>', 2, 90)
    pyxel.show()
